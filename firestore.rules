rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se o usuário é admin
    function isAdmin() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Regras para a coleção api_keys
    match /api_keys/{keyId} {
      allow read: if isAdmin();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Regras para a coleção users
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    // Regras para notificações de usuários
    match /user_notifications/{notificationId} {
      // Usuários podem ler suas próprias notificações
      allow read: if request.auth != null &&
        resource.data.userId == request.auth.uid;

      // Usuários podem marcar suas notificações como lidas
      allow update: if request.auth != null &&
        resource.data.userId == request.auth.uid &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);

      // Apenas admins podem criar notificações
      allow create: if isAdmin();

      // Apenas admins podem deletar notificações
      allow delete: if isAdmin();
    }

    // Regras para outras coleções...
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
